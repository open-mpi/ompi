.\" -*- nroff -*-
.\" Copyright 2013 Los Alamos National Security, LLC. All rights reserved.
.\" Copyright 2010 Cisco Systems, Inc.  All rights reserved.
.\" Copyright 2007-2008 Sun Microsystems, Inc.
.\" Copyright (c) 1996 Thinking Machines Corporation
.\" $COPYRIGHT$
.TH MPI_Send 3 "#OMPI_DATE#" "#PACKAGE_VERSION#" "#PACKAGE_NAME#"
.SH NAME
\fBMPI_Send\fP \- Performs a standard-mode blocking send.

.SH SYNTAX
.ft R
.SH C Syntax
.nf
#include <mpi.h>
int MPI_Send(const void *\fIbuf\fP, int\fI count\fP, MPI_Datatype\fI datatype\fP, int\fI dest\fP,
	int\fI tag\fP, MPI_Comm\fI comm\fP)

.fi
.SH Fortran Syntax
.nf
USE MPI
! or the older form: INCLUDE 'mpif.h'
MPI_SEND(\fIBUF, COUNT, DATATYPE, DEST, TAG, COMM, IERROR\fP)
	<type>	\fIBUF(*)\fP
	INTEGER	\fICOUNT, DATATYPE, DEST, TAG, COMM, IERROR\fP

.fi
.SH Fortran 2008 Syntax
.nf
USE mpi_f08
MPI_Send(\fIbuf\fP, \fIcount\fP, \fIdatatype\fP, \fIdest\fP, \fItag\fP, \fIcomm\fP, \fIierror\fP)
	TYPE(*), DIMENSION(..), INTENT(IN) :: \fIbuf\fP
	INTEGER, INTENT(IN) :: \fIcount\fP, \fIdest\fP, \fItag\fP
	TYPE(MPI_Datatype), INTENT(IN) :: \fIdatatype\fP
	TYPE(MPI_Comm), INTENT(IN) :: \fIcomm\fP
	INTEGER, OPTIONAL, INTENT(OUT) :: \fIierror\fP

.fi
.SH C++ Syntax
.nf
#include <mpi.h>
void Comm::Send(const void* \fIbuf\fP, int \fIcount\fP, const Datatype&
	\fIdatatype\fP, int \fIdest\fP, int \fItag\fP) const

.fi
.SH INPUT PARAMETERS
.ft R
.TP 1i
buf
Initial address of send buffer (choice).
.TP 1i
count
Number of elements send (nonnegative integer).
.TP 1i
datatype
Datatype of each send buffer element (handle).
.TP 1i
dest
Rank of destination (integer).
.TP 1i
tag
Message tag (integer).
.TP 1i
comm
Communicator (handle).

.SH OUTPUT PARAMETER
.ft R
.TP 1i
IERROR
Fortran only: Error status (integer).

.SH DESCRIPTION
.ft R
MPI_Send performs a standard-mode, blocking send.

.SH NOTE
.ft R
This routine will block until the message is sent to the destination. For an in-depth explanation of the semantics of the standard-mode send, refer to the MPI-1 Standard.

.SH ERRORS
Almost all MPI routines return an error value; C routines as the value of the function and Fortran routines in the last argument. C++ functions do not return errors. If the default error handler is set to MPI::ERRORS_THROW_EXCEPTIONS, then on error the C++ exception mechanism will be used to throw an MPI::Exception object.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for I/O function errors. The error handler may be changed with MPI_Comm_set_errhandler; the predefined error handler MPI_ERRORS_RETURN may be used to cause error values to be returned. Note that MPI does not guarantee that an MPI program can continue past an error.

.SH SEE ALSO
.ft R
.nf
MPI_Isend
MPI_Bsend
MPI_Recv

