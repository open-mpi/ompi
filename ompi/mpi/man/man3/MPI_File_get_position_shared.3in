.\" -*- nroff -*-
.\" Copyright 2010 Cisco Systems, Inc.  All rights reserved.
.\" Copyright 2006-2008 Sun Microsystems, Inc.
.\" Copyright (c) 1996 Thinking Machines Corporation
.\" Copyright 2015      Research Organization for Information Science
.\"                     and Technology (RIST). All rights reserved.
.\" $COPYRIGHT$
.TH MPI_File_get_position_shared 3 "#OMPI_DATE#" "#PACKAGE_VERSION#" "#PACKAGE_NAME#"
.SH NAME
\fBMPI_File_get_position_shared\fP \- Returns the current position of the shared file pointer.

.SH SYNTAX
.ft R
.nf
.SH C Syntax
    #include <mpi.h>
    int MPI_File_get_position_shared(MPI_File \fIfh\fP, MPI_Offset \fI*offset\fP)

.fi
.SH Fortran Syntax (see FORTRAN 77 NOTES)
.nf
USE MPI
! or the older form: INCLUDE 'mpif.h'
MPI_FILE_GET_POSITION_SHARED(\fIFH\fP, \fIOFFSET\fP, \fIIERROR\fP)
	INTEGER	\fIFH, IERROR\fP
	INTEGER(KIND=MPI_OFFSET_KIND)	\fIOFFSET\fP

.fi
.SH Fortran 2008 Syntax
.nf
USE mpi_f08
MPI_File_get_position_shared(\fIfh\fP, \fIoffset\fP, \fIierror\fP)
	TYPE(MPI_File), INTENT(IN) :: \fIfh\fP
	INTEGER(KIND=MPI_OFFSET_KIND), INTENT(OUT) :: \fIoffset\fP
	INTEGER, OPTIONAL, INTENT(OUT) :: \fIierror\fP

.fi
.SH C++ Syntax
.nf
#include <mpi.h>
MPI::Offset MPI::File::Get_position_shared() const

.fi
.SH INPUT PARAMETER
.ft R
.TP 1i
fh
File handle (handle).

.SH OUTPUT PARAMETERS
.ft R
.TP 1i
offset
Offset of the shared file pointer (integer).
.TP 1i
IERROR
Fortran only: Error status (integer).

.SH DESCRIPTION
.ft R
MPI_File_get_position_shared returns, in
.I offset,
the current position of the shared file pointer in
.I etype
units relative to the current displacement and file type.

.SH FORTRAN 77 NOTES
.ft R
The MPI standard prescribes portable Fortran syntax for
the \fIOFFSET\fP argument only for Fortran 90. Sun FORTRAN 77
users may use the non-portable syntax
.sp
.nf
     INTEGER*MPI_OFFSET_KIND \fIOFFSET\fP
.fi
.sp
where MPI_ADDRESS_KIND is a constant defined in mpif.h
and gives the length of the declared integer in bytes.

.SH ERRORS
Almost all MPI routines return an error value; C routines as the value of the function and Fortran routines in the last argument. C++ functions do not return errors. If the default error handler is set to MPI::ERRORS_THROW_EXCEPTIONS, then on error the C++ exception mechanism will be used to throw an MPI::Exception object.
.sp
Before the error value is returned, the current MPI error handler is
called. For MPI I/O function errors, the default error handler is set to MPI_ERRORS_RETURN. The error handler may be changed with MPI_File_set_errhandler; the predefined error handler MPI_ERRORS_ARE_FATAL may be used to make I/O errors fatal. Note that MPI does not guarantee that an MPI program can continue past an error.

