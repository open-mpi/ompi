.\" -*- nroff -*-
.\" Copyright 2010 Cisco Systems, Inc.  All rights reserved.
.\" Copyright 2006-2008 Sun Microsystems, Inc.
.\" Copyright (c) 1996 Thinking Machines Corporation
.\" Copyright 2015-2016 Research Organization for Information Science
.\"                     and Technology (RIST). All rights reserved.
.\" $COPYRIGHT$
.TH MPI_File_set_info 3 "#OMPI_DATE#" "#PACKAGE_VERSION#" "#PACKAGE_NAME#"
.SH NAME
\fBMPI_File_set_info\fP \- Sets new values for hints (collective).

.SH SYNTAX
.ft R
.nf
.SH C Syntax
.nf
#include <mpi.h>
int MPI_File_set_info(MPI_File \fIfh\fP, MPI_Info \fIinfo\fP)

.fi
.SH Fortran Syntax
.nf
USE MPI
! or the older form: INCLUDE 'mpif.h'
MPI_FILE_SET_INFO(\fIFH\fP, \fIINFO\fP, \fIIERROR\fP)
	INTEGER	\fIFH, INFO, IERROR\fP

.fi
.SH Fortran 2008 Syntax
.nf
USE mpi_f08
MPI_File_set_info(\fIfh\fP, \fIinfo\fP, \fIierror\fP)
	TYPE(MPI_File), INTENT(IN) :: \fIfh\fP
	TYPE(MPI_Info), INTENT(IN) :: \fIinfo\fP
	INTEGER, OPTIONAL, INTENT(OUT) :: \fIierror\fP

.fi
.SH C++ Syntax
.nf
#include <mpi.h>
void MPI::File::Set_info(const MPI::Info& \fIinfo\fP)

.fi
.SH INPUT/OUTPUT PARAMETER
.ft R
.TP 1i
fh
File handle (handle).

.SH INPUT PARAMETER
.ft R
.TP 1i
info
Info object (handle).

.SH OUTPUT PARAMETER
.ft R
.TP 1i
IERROR
Fortran only: Error status (integer).

.SH DESCRIPTION
.ft R
MPI_File_set_info is a collective routine that sets new values for the hints of the file associated with \fIfh\fP. These hints are set for each file, using the MPI_File_open, MPI_File_delete, MPI_File_set_view, and MPI_File_set_info routines. The opaque \fIinfo\fP object, which allows you to provide hints for optimization of your code, may be different on each process, but some \fIinfo\fP entries are required to be the same on all processes: In these cases, they must appear with the same value in each process's info object. See the HINTS section for a list of hints that can be set.

.SH HINTS
.ft R
The following hints can be used as values for the \fIinfo\fP argument.
.sp
SETTABLE HINTS:
.sp
- shared_file_timeout: Amount of time (in seconds) to wait for access to the
shared file pointer before exiting with MPI_ERR_TIMEDOUT.
.sp
- rwlock_timeout: Amount of time (in seconds) to wait for obtaining a read or
write lock on a contiguous chunk of a UNIX file before exiting with MPI_ERR_TIMEDOUT.
.sp
- noncoll_read_bufsize:  Maximum size of the buffer used by
MPI I/O to satisfy read requests in
the noncollective data-access routines. (See NOTE, below.)
.sp
- noncoll_write_bufsize: Maximum size of the buffer used by
MPI I/O to satisfy write requests in
the noncollective data-access routines. (See NOTE, below.)
.sp
- coll_read_bufsize:  Maximum size of the buffer used by MPI
I/O to satisfy read requests in the
collective data-access routines. (See NOTE, below.)
.sp
- coll_write_bufsize:  Maximum size of the buffer used by MPI
I/O to satisfy write requests in the
collective data-access routines. (See NOTE, below.)
.sp
NOTE: A buffer size smaller than the distance (in bytes) in a UNIX file between the first byte and the last byte of the access request causes MPI I/O to iterate and perform multiple UNIX read() or write() calls. If the request includes multiple noncontiguous chunks of data, and the buffer size is greater than the size of those chunks, then the UNIX read() or write() (made at the MPI I/O level) will access data not requested by this process in order to reduce the total number of write() calls made. If this is not desirable behavior, you should reduce this buffer size to equal the size of the contiguous chunks within the aggregate request.
.sp
- mpiio_concurrency: (boolean) controls whether nonblocking
I/O routines can bind an extra thread to an LWP.
.sp
- mpiio_coll_contiguous: (boolean) controls whether subsequent collective data accesses will request collectively contiguous regions of the file.
.sp
NON-SETTABLE HINTS:
.sp
- filename: Access this hint to get the name of the file.

.SH ERRORS
Almost all MPI routines return an error value; C routines as the value of the function and Fortran routines in the last argument. C++ functions do not return errors. If the default error handler is set to MPI::ERRORS_THROW_EXCEPTIONS, then on error the C++ exception mechanism will be used to throw an MPI::Exception object.
.sp
Before the error value is returned, the current MPI error handler is
called. For MPI I/O function errors, the default error handler is set to MPI_ERRORS_RETURN. The error handler may be changed with MPI_File_set_errhandler; the predefined error handler MPI_ERRORS_ARE_FATAL may be used to make I/O errors fatal. Note that MPI does not guarantee that an MPI program can continue past an error.

