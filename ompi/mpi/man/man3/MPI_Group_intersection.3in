.\" -*- nroff -*-
.\" Copyright 2010 Cisco Systems, Inc.  All rights reserved.
.\" Copyright 2006-2008 Sun Microsystems, Inc.
.\" Copyright (c) 1996 Thinking Machines Corporation
.\" $COPYRIGHT$
.TH MPI_Group_intersection 3 "#OMPI_DATE#" "#PACKAGE_VERSION#" "#PACKAGE_NAME#"
.SH NAME
\fBMPI_Group_intersection \fP \- Produces a group at the intersection of two existing groups.

.SH SYNTAX
.ft R
.SH C Syntax
.nf
#include <mpi.h>
int MPI_Group_intersection(MPI_Group \fIgroup1\fP, MPI_Group\fI group2\fP,
	MPI_Group\fI *newgroup\fP)

.fi
.SH Fortran Syntax
.nf
USE MPI
! or the older form: INCLUDE 'mpif.h'
MPI_GROUP_INTERSECTION(\fIGROUP1, GROUP2, NEWGROUP, IERROR\fP)
	INTEGER	\fIGROUP1, GROUP2, NEWGROUP, IERROR\fP

.fi
.SH Fortran 2008 Syntax
.nf
USE mpi_f08
MPI_Group_intersection(\fIgroup1\fP, \fIgroup2\fP, \fInewgroup\fP, \fIierror\fP)
	TYPE(MPI_Group), INTENT(IN) :: \fIgroup1\fP, \fIgroup2\fP
	TYPE(MPI_Group), INTENT(OUT) :: \fInewgroup\fP
	INTEGER, OPTIONAL, INTENT(OUT) :: \fIierror\fP

.fi
.SH C++ Syntax
.nf
#include <mpi.h>
static Group Group::Intersect(const Group& \fIgroup1\fP, const Group& \fIgroup2\fP)

.fi
.SH INPUT PARAMETERS
.ft R
.TP 1i
group1
First group (handle).
.TP 1i
group2
Second group (handle).

.SH OUTPUT PARAMETERS
.ft R
.TP 1i
newgroup
Intersection group (handle).
.ft R
.TP 1i
IERROR
Fortran only: Error status (integer).

.SH DESCRIPTION
.ft R
The set-like operations are defined as follows:
.TP
  o
union -- All elements of the first group (group1), followed by all elements
of second group (group2) not in first.
.TP
  o
intersect -- all elements of the first group that are also in the second
group, ordered as in first group.
.TP
  o
difference -- all elements of the first group that are not in the second group, ordered as in the first group.
.LP
Note that for these operations the order of processes in the output group is determined primarily by order in the first group (if possible) and then, if necessary, by order in the second group. Neither union nor intersection are commutative, but both are associative.
.sp
The new group can be empty, that is, equal to MPI_GROUP_EMPTY.

.SH ERRORS
Almost all MPI routines return an error value; C routines as the value of the function and Fortran routines in the last argument. C++ functions do not return errors. If the default error handler is set to MPI::ERRORS_THROW_EXCEPTIONS, then on error the C++ exception mechanism will be used to throw an MPI::Exception object.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for I/O function errors. The error handler may be changed with MPI_Comm_set_errhandler; the predefined error handler MPI_ERRORS_RETURN may be used to cause error values to be returned. Note that MPI does not guarantee that an MPI program can continue past an error.

.SH SEE ALSO
MPI_Group_free
.br


