.\" -*- nroff -*-
.\" Copyright 2010 Cisco Systems, Inc.  All rights reserved.
.\" Copyright 2006-2008 Sun Microsystems, Inc. All rights reserved. Use is subject to license terms.
.\" Copyright (c) 1996 Thinking Machines Corporation
.\" $COPYRIGHT$
.TH MPI_Get_processor_name 3 "#OMPI_DATE#" "#PACKAGE_VERSION#" "#PACKAGE_NAME#"
.SH NAME
\fBMPI_Get_processor_name \fP \- Gets the name of the processor.

.SH SYNTAX
.ft R
.SH C Syntax
.nf
#include <mpi.h>
int MPI_Get_processor_name(char *\fIname\fP, int *\fIresultlen\fP)

.fi
.SH Fortran Syntax
.nf
USE MPI
! or the older form: INCLUDE 'mpif.h'
MPI_GET_PROCESSOR_NAME(\fINAME, RESULTLEN, IERROR\fP)
	CHARACTER*(*)	\fINAME\fP
	INTEGER		\fIRESULTLEN, IERROR \fP

.fi
.SH Fortran 2008 Syntax
.nf
USE mpi_f08
MPI_Get_processor_name(\fIname\fP, \fIresultlen\fP, \fIierror\fP)
	CHARACTER(LEN=MPI_MAX_PROCESSOR_NAME), INTENT(OUT) :: \fIname\fP
	INTEGER, INTENT(OUT) :: \fIresultlen\fP
	INTEGER, OPTIONAL, INTENT(OUT) :: \fIierror\fP

.fi
.SH C++ Syntax
.nf
#include <mpi.h>
void Get_processor_name(char* \fIname\fP, int& \fIresultlen\fP)

.fi
.SH OUTPUT PARAMETERS
.ft R
.TP 1i
name
A unique specifier for the actual (as opposed to virtual) node.
.TP 1i
resultlen
Length (in characters) of result returned in name.
.ft R
.TP 1i
IERROR
Fortran only: Error status (integer).

.SH DESCRIPTION
.ft R
This routine returns the name of the processor on which it was called at the moment of the call. The name is a character string for maximum flexibility. From this value it must be possible to identify a specific piece of hardware. The argument name must represent storage that is at least MPI_MAX_PROCESSOR_NAME characters long.
.sp
The number of characters actually written is returned in the output
argument, resultlen.
.sp
.SH NOTES
.ft R
The user must provide at least MPI_MAX_PROCESSOR_NAME space to write the processor name; processor names can be this long. The user should examine the output argument, resultlen, to determine the actual length of the name.
.sp

.SH ERRORS
Almost all MPI routines return an error value; C routines as the value of the function and Fortran routines in the last argument. C++ functions do not return errors. If the default error handler is set to MPI::ERRORS_THROW_EXCEPTIONS, then on error the C++ exception mechanism will be used to throw an MPI::Exception object.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for I/O function errors. The error handler may be changed with MPI_Comm_set_errhandler; the predefined error handler MPI_ERRORS_RETURN may be used to cause error values to be returned. Note that MPI does not guarantee that an MPI program can continue past an error.



