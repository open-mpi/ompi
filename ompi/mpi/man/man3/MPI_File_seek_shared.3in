.\" -*- nroff -*-
.\" Copyright 2010 Cisco Systems, Inc.  All rights reserved.
.\" Copyright 2006-2008 Sun Microsystems, Inc.
.\" Copyright (c) 1996 Thinking Machines Corporation
.\" Copyright 2015-2016 Research Organization for Information Science
.\"                     and Technology (RIST). All rights reserved.
.\" $COPYRIGHT$
.TH MPI_File_seek_shared 3 "#OMPI_DATE#" "#PACKAGE_VERSION#" "#PACKAGE_NAME#"
.SH NAME
\fBMPI_File_seek_shared\fP \- Updates the global shared file pointer (collective).

.SH SYNTAX
.ft R
.nf
.SH C Syntax
.nf
#include <mpi.h>
int MPI_File_seek_shared(MPI_File \fIfh\fP, MPI_Offset \fIoffset\fP,
	int \fIwhence\fP)

.fi
.SH Fortran Syntax (see FORTRAN 77 NOTES)
.nf
USE MPI
! or the older form: INCLUDE 'mpif.h'
MPI_FILE_SEEK_SHARED(\fIFH\fP, \fIOFFSET\fP, \fIWHENCE\fP, \fIIERROR\fP)
	INTEGER	\fIFH, WHENCE, IERROR\fP
	INTEGER(KIND=MPI_OFFSET_KIND)	\fIOFFSET\fP

.fi
.SH Fortran 2008 Syntax
.nf
USE mpi_f08
MPI_File_seek_shared(\fIfh\fP, \fIoffset\fP, \fIwhence\fP, \fIierror\fP)
	TYPE(MPI_File), INTENT(IN) :: \fIfh\fP
	INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: \fIoffset\fP
	INTEGER, INTENT(IN) :: \fIwhence\fP
	INTEGER, OPTIONAL, INTENT(OUT) :: \fIierror\fP

.fi
.SH C++ Syntax
.nf
#include <mpi.h>
void MPI::File::Seek_shared(MPI::Offset \fIoffset\fP, int \fIwhence\fP)

.fi
.SH INPUT PARAMETERS
.ft R
.TP 1i
fh
File handle (handle).
.TP 1i
offset
File offset (integer).
.TP 1i
whence
Update mode (integer).

.SH OUTPUT PARAMETER
.ft R
.TP 1i
IERROR
Fortran only: Error status (integer).

.SH DESCRIPTION
.ft R
MPI_File_seek_shared updates the shared file pointer according to
.I whence,
which could have the following possible values:
.TP
  o
MPI_SEEK_SET - The pointer is set to
.I offset.
.TP
  o
MPI_SEEK_CUR - The pointer is set to the current pointer position plus
.I offset.
.TP
  o
MPI_SEEK_END - The pointer is set to the end of the file plus
.I offset.
.sp
.RE
MPI_File_seek_shared is collective; all the processes in the communicator
group associated with the file handle
.I fh
must call MPI_File_seek_shared with the same
.I offset
and
.I whence.
All processes in the communicator group are synchronized before the shared file pointer is updated.

.sp
The
.I offset
can be negative, which allows seeking backwards. It is erroneous to
seek to a negative position in the view. The end of the view is
defined to be the position of the next elementary data item, relative
to the current view, following the last whole elementary data item
accessible.

.SH FORTRAN 77 NOTES
.ft R
The MPI standard prescribes portable Fortran syntax for
the \fIOFFSET\fP argument only for Fortran 90.  FORTRAN 77
users may use the non-portable syntax
.sp
.nf
     INTEGER*MPI_OFFSET_KIND \fIOFFSET\fP
.fi
.sp
where MPI_OFFSET_KIND is a constant defined in mpif.h
and gives the length of the declared integer in bytes.

.SH ERRORS
Almost all MPI routines return an error value; C routines as the value of the function and Fortran routines in the last argument. C++ functions do not return errors. If the default error handler is set to MPI::ERRORS_THROW_EXCEPTIONS, then on error the C++ exception mechanism will be used to throw an MPI::Exception object.
.sp
Before the error value is returned, the current MPI error handler is
called. For MPI I/O function errors, the default error handler is set to MPI_ERRORS_RETURN. The error handler may be changed with MPI_File_set_errhandler; the predefined error handler MPI_ERRORS_ARE_FATAL may be used to make I/O errors fatal. Note that MPI does not guarantee that an MPI program can continue past an error.

