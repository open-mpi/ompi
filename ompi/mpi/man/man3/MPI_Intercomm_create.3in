.\" -*- nroff -*-
.\" Copyright 2010 Cisco Systems, Inc.  All rights reserved.
.\" Copyright 2006-2008 Sun Microsystems, Inc.
.\" Copyright (c) 1996 Thinking Machines Corporation
.\" $COPYRIGHT$
.TH MPI_Intercomm_create 3 "#OMPI_DATE#" "#PACKAGE_VERSION#" "#PACKAGE_NAME#"
.SH NAME
\fBMPI_Intercomm_create\fP \- Creates an intercommunicator from two intracommunicators.

.SH SYNTAX
.ft R
.SH C Syntax
.nf
#include <mpi.h>
int MPI_Intercomm_create(MPI_Comm \fIlocal_comm\fP, int\fI local_leader\fP,
	MPI_Comm\fI peer_comm\fP, int\fI remote_leader\fP, int\fI tag\fP, MPI_Comm\fI *newintercomm\fP)

.fi
.SH Fortran Syntax
.nf
USE MPI
! or the older form: INCLUDE 'mpif.h'
MPI_INTERCOMM_CREATE(\fILOCAL_COMM, LOCAL_LEADER, PEER_COMM,
		REMOTE_LEADER, TAG, NEWINTERCOMM, IERROR\fP)
	INTEGER	\fILOCAL_COMM, LOCAL_LEADER, PEER_COMM, REMOTE_LEADER\fP
	INTEGER	\fITAG, NEWINTERCOMM, IERROR\fP

.fi
.SH Fortran 2008 Syntax
.nf
USE mpi_f08
MPI_Intercomm_create(\fIlocal_comm\fP, \fIlocal_leader\fP, \fIpeer_comm\fP, \fIremote_leader\fP,
		\fItag\fP, \fInewintercomm\fP, \fIierror\fP)
	TYPE(MPI_Comm), INTENT(IN) :: \fIlocal_comm\fP, \fIpeer_comm\fP
	INTEGER, INTENT(IN) :: \fIlocal_leader\fP, \fIremote_leader\fP, \fItag\fP
	TYPE(MPI_Comm), INTENT(OUT) :: \fInewintercomm\fP
	INTEGER, OPTIONAL, INTENT(OUT) :: \fIierror\fP

.fi
.SH C++ Syntax
.nf
#include <mpi.h>
Intercomm Intracomm::Create_intercomm(int \fIlocal_leader\fP, const
	Comm& \fIpeer_comm\fP, int \fIremote_leader\fP, int \fItag\fP) const

.fi
.SH INPUT PARAMETERS
.ft R
.TP 1i
local_comm
The communicator containing the process that initiates the inter-communication (handle).
.TP 1i
local_leader
Rank of local group leader in local_comm (integer).
.TP 1i
peer_comm
"Peer" communicator; significant only at the local_leader (handle).
.TP 1i
remote_leader
Rank of remote group leader in peer_comm; significant only at the local_leader (integer).
.TP 1i
tag
Message tag used to identify new intercommunicator (integer).

.SH OUTPUT PARAMETERS
.ft R
.TP 1i
newintercomm
Created intercommunicator (handle).
.ft R
.TP 1i
IERROR
Fortran only: Error status (integer).

.SH DESCRIPTION
.ft R
This call creates an intercommunicator. It is collective over the union of the local and remote groups. Processes should provide identical local_comm and local_leader arguments within each group. Wildcards are not permitted for remote_leader, local_leader, and tag.
.sp
This call uses point-to-point communication with communicator peer_comm,
and with tag tag between the leaders. Thus, care must be taken that there be no pending communication on peer_comm that could interfere with this communication.

If multiple MPI_Intercomm_creates are being made, they should use different tags (more precisely, they should ensure that the local and remote leaders are using different tags for each MPI_intercomm_create).

.SH NOTES
We recommend using a dedicated peer communicator, such as a duplicate of MPI_COMM_WORLD, to avoid trouble with peer communicators.
.sp
The MPI 1.1 Standard contains two mutually exclusive comments on the
input intracommunicators.  One says that their respective groups must be
disjoint; the other that the leaders can be the same process.  After
some discussion by the MPI Forum, it has been decided that the groups must
be disjoint.  Note that the
.B reason
given for this in the standard is
.B not
the reason for this choice; rather, the
.B other
operations on
intercommunicators (like
.I MPI_Intercomm_merge
) do not make sense if the
groups are not disjoint.

.SH ERRORS
Almost all MPI routines return an error value; C routines as the value of the function and Fortran routines in the last argument. C++ functions do not return errors. If the default error handler is set to MPI::ERRORS_THROW_EXCEPTIONS, then on error the C++ exception mechanism will be used to throw an MPI::Exception object.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for I/O function errors. The error handler may be changed with MPI_Comm_set_errhandler; the predefined error handler MPI_ERRORS_RETURN may be used to cause error values to be returned. Note that MPI does not guarantee that an MPI program can continue past an error.

.SH SEE ALSO
MPI_Intercomm_merge
.br
MPI_Comm_free
.br
MPI_Comm_remote_group
.br
MPI_Comm_remote_size


