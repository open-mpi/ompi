.\" -*- nroff -*-
.\" Copyright 2013 Los Alamos National Security, LLC. All rights reserved.
.\" Copyright 2010 Cisco Systems, Inc.  All rights reserved.
.\" Copyright 2006-2008 Sun Microsystems, Inc.
.\" Copyright (c) 1996 Thinking Machines Corporation
.\" $COPYRIGHT$
.TH MPI_Comm_create 3 "#OMPI_DATE#" "#PACKAGE_VERSION#" "#PACKAGE_NAME#"
.SH NAME
\fBMPI_Comm_create\fP \- Creates a new communicator.

.SH SYNTAX
.ft R
.SH C Syntax
.nf
#include <mpi.h>
int MPI_Comm_create(MPI_Comm \fIcomm\fP, MPI_Group\fI group\fP, MPI_Comm\fI *newcomm\fP)

.fi
.SH Fortran Syntax
.nf
USE MPI
! or the older form: INCLUDE 'mpif.h'
MPI_COMM_CREATE(\fICOMM, GROUP, NEWCOMM, IERROR\fP)
	INTEGER	\fICOMM, GROUP, NEWCOMM, IERROR\fP

.fi
.SH Fortran 2008 Syntax
.nf
USE mpi_f08
MPI_Comm_create(\fIcomm\fP, \fIgroup\fP, \fInewcomm\fP, \fIierror\fP)
	TYPE(MPI_Comm), INTENT(IN) :: \fIcomm\fP
	TYPE(MPI_Group), INTENT(IN) :: \fIgroup\fP
	TYPE(MPI_Comm), INTENT(OUT) :: \fInewcomm\fP
	INTEGER, OPTIONAL, INTENT(OUT) :: \fIierror\fP

.fi
.SH C++ Syntax
.nf
#include <mpi.h>
MPI::Intercomm MPI::Intercomm::Create(const Group& \fIgroup\fP) const

MPI::Intracomm MPI::Intracomm::Create(const Group& \fIgroup\fP) const

.fi
.SH INPUT PARAMETER
.ft R
.TP 1i
comm
Communicator (handle).
.TP 1i
group
Group, which is a subset of the group of comm (handle).

.SH OUTPUT PARAMETERS
.ft R
.TP 1i
newcomm
New communicator (handle).
.ft R
.TP 1i
IERROR
Fortran only: Error status (integer).

.SH DESCRIPTION
.ft R
This function creates a new communicator newcomm with communication
group defined by group and a new context. The function sets
\fInewcomm\fR to a new communicator that spans all the processes that
are in the group.  It sets \fInewcomm\fR to MPI_COMM_NULL for
processes that are not in the group.

Each process must call with a \fIgroup\fR argument that is a subgroup
of the group associated with \fIcomm\fR; this could be
MPI_GROUP_EMPTY. The processes may specify different values for the
\fIgroup\fR argument. If a process calls with a non-empty \fIgroup\fR,
then all processes in that group must call the function with the same
\fIgroup\fR as argument, that is: the same processes in the same
order. Otherwise the call is erroneous.
.sp
.LP

.SH NOTES
MPI_Comm_create provides a means of making a subset of processes for the purpose of separate MIMD computation, with separate communication space. \fInewcomm\fR, which is created by MPI_Comm_create, can be used in subsequent calls to MPI_Comm_create (or other communicator constructors) to further subdivide a computation into parallel sub-computations. A more general service is provided by MPI_Comm_split.

.SH ERRORS
Almost all MPI routines return an error value; C routines as the value of the function and Fortran routines in the last argument. C++ functions do not return errors. If the default error handler is set to MPI::ERRORS_THROW_EXCEPTIONS, then on error the C++ exception mechanism will be used to throw an MPI::Exception object.
.sp
Before the error value is returned, the current MPI error handler is
called. By default, this error handler aborts the MPI job, except for I/O function errors. The error handler may be changed with MPI_Comm_set_errhandler; the predefined error handler MPI_ERRORS_RETURN may be used to cause error values to be returned. Note that MPI does not guarantee that an MPI program can continue past an error.

.SH SEE ALSO
.ft R
.sp
MPI_Comm_split
.sp
MPI_Intercomm_create
MPI_Comm_create_group
