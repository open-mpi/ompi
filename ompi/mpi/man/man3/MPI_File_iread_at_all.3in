.\" -*- nroff -*-
.\" Copyright 2010 Cisco Systems, Inc.  All rights reserved.
.\" Copyright 2006-2008 Sun Microsystems, Inc.
.\" Copyright (c) 1996 Thinking Machines Corporation
.\" Copyright 2015-2016 Research Organization for Information Science
.\"                     and Technology (RIST). All rights reserved.
.\" $COPYRIGHT$
.TH MPI_File_iread_at_all 3 "#OMPI_DATE#" "#PACKAGE_VERSION#" "#PACKAGE_NAME#"
.SH NAME
\fBMPI_File_iread_at_all\fP \- Reads a file at an explicitly specified offset (nonblocking, collective).

.SH SYNTAX
.ft R
.nf
.SH C Syntax
.nf
#include <mpi.h>
int MPI_File_iread_at_all(MPI_File \fIfh\fP, MPI_Offset \fIoffset\fP,
	void \fI*buf\fP, int \fIcount\fP, MPI_Datatype \fIdatatype\fP,
	MPI_Request \fI*request\fP)

.fi
.SH Fortran Syntax (see FORTRAN 77 NOTES)
.nf
USE MPI
! or the older form: INCLUDE 'mpif.h'
MPI_FILE_IREAD_AT_ALL(\fIFH\fP, \fIOFFSET\fP, \fIBUF\fP, \fICOUNT\fP, \fIDATATYPE\fP, \fIREQUEST\fP, \fIIERROR\fP)
	<type>	\fIBUF\fP(*)
	INTEGER	\fIFH, COUNT, DATATYPE, REQUEST, IERROR\fP
	INTEGER(KIND=MPI_OFFSET_KIND)	\fIOFFSET\fP

.fi
.SH Fortran 2008 Syntax
.nf
USE mpi_f08
MPI_File_iread_at_all(\fIfh\fP, \fIoffset\fP, \fIbuf\fP, \fIcount\fP, \fIdatatype\fP, \fIrequest\fP, \fIierror\fP)
	TYPE(MPI_File), INTENT(IN) :: \fIfh\fP
	INTEGER(KIND=MPI_OFFSET_KIND), INTENT(IN) :: offset
	TYPE(*), DIMENSION(..) :: \fIbuf\fP
	INTEGER, INTENT(IN) :: \fIcount\fP
	TYPE(MPI_Datatype), INTENT(IN) :: \fIdatatype\fP
	TYPE(MPI_Request), INTENT(OUT) :: \fIrequest\fP
	INTEGER, OPTIONAL, INTENT(OUT) :: \fIierror\fP

.fi
.SH INPUT PARAMETERS
.ft R
.TP 1i
fh
File handle (handle).
.ft R
.TP 1i
offset
File offset (integer).
.ft R
.TP 1i
count
Number of elements in the buffer (integer).
.ft R
.TP 1i
datatype
Data type of each buffer element (handle).

.SH OUTPUT PARAMETERS
.ft R
.TP 1i
buf
Initial address of the buffer (choice).
.ft R
.TP 1i
request
Request object (handle).
.TP 1i
IERROR
Fortran only: Error status (integer).

.SH DESCRIPTION
.ft R
MPI_File_iread_at_all is the nonblocking version of MPI_File_read_at_all.

MPI_File_iread_at_all is a nonblocking routine that attempts to read from the file associated with
.I fh
at the
.I offset
position a total number of
.I count
data items having
.I datatype
type into the user's buffer
.I buf.
The
.I offset
is in etype units relative to the current view. That is, holes are not counted
when locating an offset. The data is taken out of those parts of the
file specified by the current view. MPI_File_iread_at_all stores the
number of
.I datatype
elements actually read in
.I status.
All other fields of
.I status
are undefined.

.SH FORTRAN 77 NOTES
.ft R
The MPI standard prescribes portable Fortran syntax for
the \fIOFFSET\fP argument only for Fortran 90.  Sun FORTRAN 77
users may use the non-portable syntax
.sp
.nf
     INTEGER*MPI_OFFSET_KIND \fIOFFSET\fP
.fi
.sp
where MPI_OFFSET_KIND is a constant defined in mpif.h
and gives the length of the declared integer in bytes.

.SH ERRORS
Almost all MPI routines return an error value; C routines as the value of the function and Fortran routines in the last argument. C++ functions do not return errors. If the default error handler is set to MPI::ERRORS_THROW_EXCEPTIONS, then on error the C++ exception mechanism will be used to throw an MPI::Exception object.
.sp
Before the error value is returned, the current MPI error handler is
called. For MPI I/O function errors, the default error handler is set to MPI_ERRORS_RETURN. The error handler may be changed with MPI_File_set_errhandler; the predefined error handler MPI_ERRORS_ARE_FATAL may be used to make I/O errors fatal. Note that MPI does not guarantee that an MPI program can continue past an error.

