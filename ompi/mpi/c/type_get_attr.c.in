/*
 * Copyright (c) 2004-2007 The Trustees of Indiana University and Indiana
 *                         University Research and Technology
 *                         Corporation.  All rights reserved.
 * Copyright (c) 2004-2020 The University of Tennessee and The University
 *                         of Tennessee Research Foundation.  All rights
 *                         reserved.
 * Copyright (c) 2004-2008 High Performance Computing Center Stuttgart,
 *                         University of Stuttgart.  All rights reserved.
 * Copyright (c) 2004-2005 The Regents of the University of California.
 *                         All rights reserved.
 * Copyright (c) 2015      Research Organization for Information Science
 *                         and Technology (RIST). All rights reserved.
 * Copyright (c) 2024      Triad National Security, LLC. All rights
 *                         reserved.
 * $COPYRIGHT$
 *
 * Additional copyrights may follow
 *
 * $HEADER$
 */

#include "ompi_config.h"

#include "ompi/mpi/c/bindings.h"
#include "ompi/runtime/params.h"
#include "ompi/communicator/communicator.h"
#include "ompi/errhandler/errhandler.h"
#include "ompi/attribute/attribute.h"
#include "ompi/datatype/ompi_datatype.h"
#include "ompi/memchecker.h"

PROTOTYPE ERROR_CLASS type_get_attr (DATATYPE type,
                                     ATTR_KEY type_keyval,
                                     BUFFER_OUT attribute_val,
                                     INT_OUT flag)
{
    int ret;

    MEMCHECKER(
        memchecker_datatype(type);
    );

    if (MPI_PARAM_CHECK) {
        OMPI_ERR_INIT_FINALIZE(FUNC_NAME);
        if (NULL == type || MPI_DATATYPE_NULL == type) {
            return OMPI_ERRHANDLER_NOHANDLE_INVOKE(MPI_ERR_TYPE,
                                          FUNC_NAME );
        } else if ((NULL == attribute_val) || (NULL == flag)) {
            return OMPI_ERRHANDLER_NOHANDLE_INVOKE(
                                          MPI_ERR_ARG,
                                          FUNC_NAME);
        } else if (MPI_KEYVAL_INVALID == type_keyval) {
            return OMPI_ERRHANDLER_NOHANDLE_INVOKE(MPI_ERR_KEYVAL,
                                          FUNC_NAME);
        }
    }

    /* This stuff is very confusing.  Be sure to see
       src/attribute/attribute.c for a lengthy comment explaining Open
       MPI attribute behavior. */

    ret = ompi_attr_get_c(type->d_keyhash, type_keyval,
                          (void**)attribute_val, flag);
    OMPI_ERRHANDLER_NOHANDLE_RETURN(ret, 
                           MPI_ERR_OTHER, FUNC_NAME);
}
