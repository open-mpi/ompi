.TH fi_sockets 7 "2015\-04\-23" "Libfabric Programmer\[aq]s Manual" "Libfabric v1.0.0rc6"
.SH NAME
.PP
The Sockets Fabric Provider
.SH OVERVIEW
.PP
The sockets provider is a general purpose provider that can be used on
any system that supports TCP sockets.
The provider is not intended to provide performance improvements over
regular TCP sockets, but rather to allow developers to write, test, and
debug application code even on platforms that do not have
high-performance fabric hardware.
The sockets provider supports all libfabric provider requirements and
interfaces.
.SH SUPPORTED FEATURES
.PP
The sockets provider supports all the features defined for the libfabric
API.
Key features include:
.PP
\f[I]Endpoint types\f[] : The provider supports all endpoint types:
\f[I]FI_EP_MSG\f[], \f[I]FI_EP_RDM\f[], and \f[I]FI_EP_DGRAM\f[].
.PP
\f[I]Endpoint capabilities\f[] : The following data transfer interface
is supported for a all endpoint types: \f[I]fi_msg\f[].
Additionally, these interfaces are supported for reliable endpoints
(\f[I]FI_EP_MSG\f[] and \f[I]FI_EP_RDM\f[]): \f[I]fi_tagged\f[],
\f[I]fi_atomic\f[], and \f[I]fi_rma\f[].
.PP
\f[I]Modes\f[] : The sockets provider supports all operational modes
including \f[I]FI_CONTEXT\f[] and \f[I]FI_MSG_PREFIX\f[].
.PP
\f[I]Progress\f[] : Sockets provider supports both
\f[I]FI_PROGRESS_AUTO\f[] and \f[I]FI_PROGRESS_MANUAL\f[], with a
default set to auto.
When progress is set to auto, a background thread runs to ensure that
progress is made for asynchronous requests.
.SH LIMITATIONS
.PP
The sockets provider attempts to emulate the entire API set, including
all defined options.
In order to support development on a wide range of systems, it is
implemented over TCP sockets.
As a result, the performance numbers are lower compared to other
providers implemented over high-speed fabric, and lower than what an
application might see implementing to sockets directly.
.SH SEE ALSO
.PP
\f[C]fabric\f[](7), \f[C]fi_provider\f[](7), \f[C]fi_getinfo\f[](3)
.SH AUTHORS
OpenFabrics.
