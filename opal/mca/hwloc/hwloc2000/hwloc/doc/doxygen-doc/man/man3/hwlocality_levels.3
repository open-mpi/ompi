.TH "hwlocality_levels" 3 "Mon Feb 5 2018" "Version 2.0.0" "Hardware Locality (hwloc)" \" -*- nroff -*-
.ad l
.nh
.SH NAME
hwlocality_levels
.SH SYNOPSIS
.br
.PP
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBhwloc_get_type_depth_e\fP { \fBHWLOC_TYPE_DEPTH_UNKNOWN\fP, \fBHWLOC_TYPE_DEPTH_MULTIPLE\fP, \fBHWLOC_TYPE_DEPTH_NUMANODE\fP, \fBHWLOC_TYPE_DEPTH_BRIDGE\fP, \fBHWLOC_TYPE_DEPTH_PCI_DEVICE\fP, \fBHWLOC_TYPE_DEPTH_OS_DEVICE\fP, \fBHWLOC_TYPE_DEPTH_MISC\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBhwloc_topology_get_depth\fP (\fBhwloc_topology_t\fP restrict topology)"
.br
.ti -1c
.RI "int \fBhwloc_get_type_depth\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type)"
.br
.ti -1c
.RI "int \fBhwloc_get_memory_parents_depth\fP (\fBhwloc_topology_t\fP topology)"
.br
.ti -1c
.RI "static int \fBhwloc_get_type_or_below_depth\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type)"
.br
.ti -1c
.RI "static int \fBhwloc_get_type_or_above_depth\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type)"
.br
.ti -1c
.RI "\fBhwloc_obj_type_t\fP \fBhwloc_get_depth_type\fP (\fBhwloc_topology_t\fP topology, int depth)"
.br
.ti -1c
.RI "unsigned \fBhwloc_get_nbobjs_by_depth\fP (\fBhwloc_topology_t\fP topology, int depth)"
.br
.ti -1c
.RI "static int \fBhwloc_get_nbobjs_by_type\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type)"
.br
.ti -1c
.RI "static \fBhwloc_obj_t\fP \fBhwloc_get_root_obj\fP (\fBhwloc_topology_t\fP topology)"
.br
.ti -1c
.RI "\fBhwloc_obj_t\fP \fBhwloc_get_obj_by_depth\fP (\fBhwloc_topology_t\fP topology, int depth, unsigned idx)"
.br
.ti -1c
.RI "static \fBhwloc_obj_t\fP \fBhwloc_get_obj_by_type\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type, unsigned idx)"
.br
.ti -1c
.RI "static \fBhwloc_obj_t\fP \fBhwloc_get_next_obj_by_depth\fP (\fBhwloc_topology_t\fP topology, int depth, \fBhwloc_obj_t\fP prev)"
.br
.ti -1c
.RI "static \fBhwloc_obj_t\fP \fBhwloc_get_next_obj_by_type\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type, \fBhwloc_obj_t\fP prev)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Be sure to see the figure in \fBTerms and Definitions\fP that shows a complete topology tree, including depths, child/sibling/cousin relationships, and an example of an asymmetric topology where one package has fewer caches than its peers\&. 
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBhwloc_get_type_depth_e\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIHWLOC_TYPE_DEPTH_UNKNOWN \fP\fP
No object of given type exists in the topology\&. 
.TP
\fB\fIHWLOC_TYPE_DEPTH_MULTIPLE \fP\fP
Objects of given type exist at different depth in the topology (only for Groups)\&. 
.TP
\fB\fIHWLOC_TYPE_DEPTH_NUMANODE \fP\fP
Virtual depth for NUMA nodes\&. 
.TP
\fB\fIHWLOC_TYPE_DEPTH_BRIDGE \fP\fP
Virtual depth for bridge object level\&. 
.TP
\fB\fIHWLOC_TYPE_DEPTH_PCI_DEVICE \fP\fP
Virtual depth for PCI device object level\&. 
.TP
\fB\fIHWLOC_TYPE_DEPTH_OS_DEVICE \fP\fP
Virtual depth for software device object level\&. 
.TP
\fB\fIHWLOC_TYPE_DEPTH_MISC \fP\fP
Virtual depth for Misc object\&. 
.SH "Function Documentation"
.PP 
.SS "\fBhwloc_obj_type_t\fP hwloc_get_depth_type (\fBhwloc_topology_t\fP topology, int depth)"

.PP
Returns the type of objects at depth \fCdepth\fP\&. \fCdepth\fP should between 0 and \fBhwloc_topology_get_depth()\fP-1\&.
.PP
\fBReturns:\fP
.RS 4
(hwloc_obj_type_t)-1 if depth \fCdepth\fP does not exist\&. 
.RE
.PP

.SS "int hwloc_get_memory_parents_depth (\fBhwloc_topology_t\fP topology)"

.PP
Return the depth of parents where memory objects are attached\&. Memory objects have virtual negative depths because they are not part of the main CPU-side hierarchy of objects\&. This depth should not be compared with other level depths\&.
.PP
If all Memory objects are attached to Normal parents at the same depth, this parent depth may be compared to other as usual, for instance for knowing whether NUMA nodes is attached above or below Packages\&.
.PP
\fBReturns:\fP
.RS 4
The depth of Normal parents of all memory children if all these parents have the same depth\&. For instance the depth of the Package level if all NUMA nodes are attached to Package objects\&.
.PP
\fBHWLOC_TYPE_DEPTH_MULTIPLE\fP if Normal parents of all memory children do not have the same depth\&. For instance if some NUMA nodes are attached to Packages while others are attached to Groups\&. 
.RE
.PP

.SS "unsigned hwloc_get_nbobjs_by_depth (\fBhwloc_topology_t\fP topology, int depth)"

.PP
Returns the width of level at depth \fCdepth\fP\&. 
.SS "static int hwloc_get_nbobjs_by_type (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type)\fC [inline]\fP, \fC [static]\fP"

.PP
Returns the width of level type \fCtype\fP\&. If no object for that type exists, 0 is returned\&. If there are several levels with objects of that type, -1 is returned\&. 
.SS "static \fBhwloc_obj_t\fP hwloc_get_next_obj_by_depth (\fBhwloc_topology_t\fP topology, int depth, \fBhwloc_obj_t\fP prev)\fC [inline]\fP, \fC [static]\fP"

.PP
Returns the next object at depth \fCdepth\fP\&. If \fCprev\fP is \fCNULL\fP, return the first object at depth \fCdepth\fP\&. 
.SS "static \fBhwloc_obj_t\fP hwloc_get_next_obj_by_type (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type, \fBhwloc_obj_t\fP prev)\fC [inline]\fP, \fC [static]\fP"

.PP
Returns the next object of type \fCtype\fP\&. If \fCprev\fP is \fCNULL\fP, return the first object at type \fCtype\fP\&. If there are multiple or no depth for given type, return \fCNULL\fP and let the caller fallback to \fBhwloc_get_next_obj_by_depth()\fP\&. 
.SS "\fBhwloc_obj_t\fP hwloc_get_obj_by_depth (\fBhwloc_topology_t\fP topology, int depth, unsigned idx)"

.PP
Returns the topology object at logical index \fCidx\fP from depth \fCdepth\fP\&. 
.SS "static \fBhwloc_obj_t\fP hwloc_get_obj_by_type (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type, unsigned idx)\fC [inline]\fP, \fC [static]\fP"

.PP
Returns the topology object at logical index \fCidx\fP with type \fCtype\fP\&. If no object for that type exists, \fCNULL\fP is returned\&. If there are several levels with objects of that type (\fBHWLOC_OBJ_GROUP\fP), \fCNULL\fP is returned and the caller may fallback to \fBhwloc_get_obj_by_depth()\fP\&. 
.SS "static \fBhwloc_obj_t\fP hwloc_get_root_obj (\fBhwloc_topology_t\fP topology)\fC [inline]\fP, \fC [static]\fP"

.PP
Returns the top-object of the topology-tree\&. Its type is \fBHWLOC_OBJ_MACHINE\fP\&. 
.SS "int hwloc_get_type_depth (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type)"

.PP
Returns the depth of objects of type \fCtype\fP\&. If no object of this type is present on the underlying architecture, or if the OS doesn't provide this kind of information, the function returns \fBHWLOC_TYPE_DEPTH_UNKNOWN\fP\&.
.PP
If type is absent but a similar type is acceptable, see also \fBhwloc_get_type_or_below_depth()\fP and \fBhwloc_get_type_or_above_depth()\fP\&.
.PP
If \fBHWLOC_OBJ_GROUP\fP is given, the function may return \fBHWLOC_TYPE_DEPTH_MULTIPLE\fP if multiple levels of Groups exist\&.
.PP
If a NUMA node, I/O or Misc object type is given, the function returns a virtual value because these objects are stored in special levels that are not CPU-related\&. This virtual depth may be passed to other hwloc functions such as \fBhwloc_get_obj_by_depth()\fP but it should not be considered as an actual depth by the application\&. In particular, it should not be compared with any other object depth or with the entire topology depth\&. 
.PP
\fBSee also:\fP
.RS 4
\fBhwloc_get_memory_parents_depth()\fP\&.
.PP
\fBhwloc_type_sscanf_as_depth()\fP for returning the depth of objects whose type is given as a string\&. 
.RE
.PP

.SS "static int hwloc_get_type_or_above_depth (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type)\fC [inline]\fP, \fC [static]\fP"

.PP
Returns the depth of objects of type \fCtype\fP or above\&. If no object of this type is present on the underlying architecture, the function returns the depth of the first 'present' object typically containing \fCtype\fP\&.
.PP
May return \fBHWLOC_TYPE_DEPTH_MULTIPLE\fP for \fBHWLOC_OBJ_GROUP\fP just like \fBhwloc_get_type_depth()\fP\&. 
.SS "static int hwloc_get_type_or_below_depth (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type)\fC [inline]\fP, \fC [static]\fP"

.PP
Returns the depth of objects of type \fCtype\fP or below\&. If no object of this type is present on the underlying architecture, the function returns the depth of the first 'present' object typically found inside \fCtype\fP\&.
.PP
May return \fBHWLOC_TYPE_DEPTH_MULTIPLE\fP for \fBHWLOC_OBJ_GROUP\fP just like \fBhwloc_get_type_depth()\fP\&. 
.SS "int hwloc_topology_get_depth (\fBhwloc_topology_t\fP restrict topology)"

.PP
Get the depth of the hierarchical tree of objects\&. This is the depth of \fBHWLOC_OBJ_PU\fP objects plus one\&.
.PP
\fBNote:\fP
.RS 4
NUMA nodes, I/O and Misc objects are ignored when computing the depth of the tree (they are placed on special levels)\&. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Hardware Locality (hwloc) from the source code\&.
